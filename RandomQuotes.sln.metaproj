<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="ValidateSolutionConfiguration;ValidateToolsVersions;ValidateProjects" DefaultTargets="Build">
  <PropertyGroup>
    <MSBuildExtensionsPath32>D:\Microsoft Visual Studio\MSBuild</MSBuildExtensionsPath32>
    <MSBuildExtensionsPath>D:\Microsoft Visual Studio\MSBuild</MSBuildExtensionsPath>
    <MSBuildToolsPath32>D:\Microsoft Visual Studio\MSBuild\Current\bin</MSBuildToolsPath32>
    <MSBuildToolsPath64>D:\Microsoft Visual Studio\MSBuild\Current\bin\amd64</MSBuildToolsPath64>
    <MSBuildSDKsPath>D:\Microsoft Visual Studio\MSBuild\Sdks</MSBuildSDKsPath>
    <FrameworkSDKRoot>C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\</FrameworkSDKRoot>
    <MSBuildRuntimeVersion>4.0.30319</MSBuildRuntimeVersion>
    <MSBuildFrameworkToolsPath>C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\</MSBuildFrameworkToolsPath>
    <MSBuildFrameworkToolsPath32>C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\</MSBuildFrameworkToolsPath32>
    <MSBuildFrameworkToolsPath64>C:\WINDOWS\Microsoft.NET\Framework64\v4.0.30319\</MSBuildFrameworkToolsPath64>
    <MSBuildFrameworkToolsRoot>C:\WINDOWS\Microsoft.NET\Framework\</MSBuildFrameworkToolsRoot>
    <SDK35ToolsPath />
    <SDK40ToolsPath>C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\</SDK40ToolsPath>
    <WindowsSDK80Path />
    <VsInstallRoot>D:\Microsoft Visual Studio</VsInstallRoot>
    <MSBuildToolsRoot>D:\Microsoft Visual Studio\MSBuild</MSBuildToolsRoot>
    <RoslynTargetsPath>D:\Microsoft Visual Studio\MSBuild\Current\bin\Roslyn</RoslynTargetsPath>
    <VCTargetsPath>D:\Microsoft Visual Studio\MSBuild\Microsoft\VC\v160\</VCTargetsPath>
    <VCTargetsPath14>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140\</VCTargetsPath14>
    <VCTargetsPath12>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V120\</VCTargetsPath12>
    <VCTargetsPath11>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V110\</VCTargetsPath11>
    <VCTargetsPath10>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\</VCTargetsPath10>
    <AndroidTargetsPath>D:\Microsoft Visual Studio\MSBuild\Microsoft\MDD\Android\V150\</AndroidTargetsPath>
    <iOSTargetsPath>D:\Microsoft Visual Studio\MSBuild\Microsoft\MDD\iOS\V150\</iOSTargetsPath>
    <VisualStudioVersion>16.0</VisualStudioVersion>
    <_DirectorySolutionPropsFile>Directory.Solution.props</_DirectorySolutionPropsFile>
    <_DirectorySolutionPropsBasePath />
    <Configuration>Debug</Configuration>
    <Platform>Any CPU</Platform>
    <AspNetConfiguration>Debug</AspNetConfiguration>
    <SolutionDir>E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\</SolutionDir>
    <SolutionExt>.sln</SolutionExt>
    <SolutionFileName>RandomQuotes.sln</SolutionFileName>
    <SolutionName>RandomQuotes</SolutionName>
    <SolutionPath>E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.sln</SolutionPath>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <CurrentSolutionConfigurationContents>
      <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{F5FC7808-1B2E-4E33-9E64-0A43AE8F41C4}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{ACCE443A-9230-4B28-AC46-56D80EFA315D}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
    </CurrentSolutionConfigurationContents>
    <NuGetRestoreTargets>D:\Microsoft Visual Studio\MSBuild\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</NuGetRestoreTargets>
    <IsRestoreTargetsFileLoaded>true</IsRestoreTargetsFileLoaded>
    <RestoreTaskAssemblyFile>NuGet.Build.Tasks.dll</RestoreTaskAssemblyFile>
    <HideWarningsAndErrors>false</HideWarningsAndErrors>
    <RestoreRecursive>true</RestoreRecursive>
    <MSBuildAllProjects>E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.sln.metaproj;;D:\Microsoft Visual Studio\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</MSBuildAllProjects>
    <RestoreUseSkipNonexistentTargets>true</RestoreUseSkipNonexistentTargets>
    <ValidateRuntimeIdentifierCompatibility>false</ValidateRuntimeIdentifierCompatibility>
    <RestoreContinueOnError>WarnAndContinue</RestoreContinueOnError>
    <RestoreBuildInParallel>true</RestoreBuildInParallel>
    <_RestoreSolutionFileUsed>true</_RestoreSolutionFileUsed>
    <NuGetInteractive />
    <PackageDownloadSupported>true</PackageDownloadSupported>
    <GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>true</GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>
    <_GenerateRestoreGraphProjectEntryInputProperties>
      ExcludeRestorePackageImports=true;
      _RestoreSolutionFileUsed=true;
      SolutionDir=E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\;
      SolutionName=RandomQuotes;
      SolutionFileName=RandomQuotes.sln;
      SolutionPath=E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.sln;
      SolutionExt=.sln;
    </_GenerateRestoreGraphProjectEntryInputProperties>
    <_DirectorySolutionTargetsFile>Directory.Solution.targets</_DirectorySolutionTargetsFile>
    <_DirectorySolutionTargetsBasePath />
  </PropertyGroup>
  <ItemDefinitionGroup />
  <ItemGroup>
    <SolutionConfiguration Include="Debug|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{F5FC7808-1B2E-4E33-9E64-0A43AE8F41C4}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{ACCE443A-9230-4B28-AC46-56D80EFA315D}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Debug</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{F5FC7808-1B2E-4E33-9E64-0A43AE8F41C4}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj" BuildProjectInSolution="True">Production|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{ACCE443A-9230-4B28-AC46-56D80EFA315D}" AbsolutePath="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Release</Configuration>
    </SolutionConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj">
      <AdditionalProperties>Configuration=Debug; Platform=AnyCPU</AdditionalProperties>
      <Platform>AnyCPU</Platform>
      <Configuration>Debug</Configuration>
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
    </ProjectReference>
    <ProjectReference Include="E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj">
      <AdditionalProperties>Configuration=Debug; Platform=AnyCPU</AdditionalProperties>
      <Platform>AnyCPU</Platform>
      <Configuration>Debug</Configuration>
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
    </ProjectReference>
  </ItemGroup>
  <Target Name="ValidateSolutionConfiguration">
    <Error Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' != 'true')" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" Code="MSB4126" Text="指定的解决方案配置“$(Configuration)|$(Platform)”无效。请使用 Configuration 和 Platform 属性指定有效的解决方案配置(例如 MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;)，或者将这些属性保留为空，以使用默认的解决方案配置。" />
    <Warning Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' == 'true')" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" Code="MSB4126" Text="指定的解决方案配置“$(Configuration)|$(Platform)”无效。请使用 Configuration 和 Platform 属性指定有效的解决方案配置(例如 MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;)，或者将这些属性保留为空，以使用默认的解决方案配置。" />
    <Message Condition="'$(CurrentSolutionConfigurationContents)' != ''" Text="正在生成解决方案配置“$(Configuration)|$(Platform)”。" />
  </Target>
  <Target Name="ValidateToolsVersions">
    <Error Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(ProjectToolsVersion)' != '2.0' and '$(ProjectToolsVersion)' != '')" HelpKeyword="MSBuild.SolutionToolsVersionDoesNotSupportProjectToolsVersion" Code="MSB4149" Text="解决方案的工具版本“$(MSBuildToolsVersion)”不支持使用其他工具版本生成项目。" />
  </Target>
  <Target Name="ValidateProjects" />
  <Target Name="GetSolutionConfigurationContents" Outputs="$(SolutionConfigurationContents)" />
  <Target Name="Restore" DependsOnTargets="_GenerateRestoreGraph">
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <RestoreTask RestoreRecursive="$(RestoreRecursive)" RestoreIgnoreFailedSources="$(RestoreIgnoreFailedSources)" RestoreDisableParallel="$(RestoreDisableParallel)" RestoreForce="$(RestoreForce)" HideWarningsAndErrors="$(HideWarningsAndErrors)" Interactive="$(NuGetInteractive)" RestoreNoCache="$(RestoreNoCache)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreForceEvaluate="$(RestoreForceEvaluate)" RestorePackagesConfig="$(RestorePackagesConfig)" />
  </Target>
  <Target Name="GenerateRestoreGraphFile" DependsOnTargets="_GenerateRestoreGraph">
    <Error Condition="$(RestoreGraphOutputPath) == ''" Text="Missing RestoreGraphOutputPath property!" />
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <WriteRestoreGraphTask RestoreGraphOutputPath="$(RestoreGraphOutputPath)" RestoreRecursive="$(RestoreRecursive)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" />
  </Target>
  <Target Name="CollectPackageReferences" Returns="@(PackageReference)" />
  <Target Name="CollectCentralPackageVersions" Returns="@(PackageVersion)" />
  <Target Name="CollectPackageDownloads" Returns="@(PackageDownload)" />
  <Target Name="CollectFrameworkReferences" Returns="@(FrameworkReference)" />
  <Target Name="_LoadRestoreGraphEntryPoints" Returns="@(RestoreGraphProjectInputItems)">
    <GetRestoreSolutionProjectsTask Condition=" $(MSBuildProjectFullPath.EndsWith('.metaproj')) == 'true' AND @(RestoreGraphProjectInputItems) == '' " SolutionFilePath="$(MSBuildProjectFullPath)" ProjectReferences="@(ProjectReference)">
      <Output TaskParameter="OutputProjectReferences" ItemName="RestoreGraphProjectInputItems" />
    </GetRestoreSolutionProjectsTask>
  </Target>
  <Target Name="_FilterRestoreGraphProjectInputItems" DependsOnTargets="_LoadRestoreGraphEntryPoints" Returns="@(FilteredRestoreGraphProjectInputItems)">
    <RemoveDuplicates Inputs="@(_FilteredRestoreGraphProjectInputItemsTmp)">
      <Output TaskParameter="Filtered" ItemName="FilteredRestoreGraphProjectInputItemsWithoutDuplicates" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " BuildInParallel="$(RestoreBuildInParallel)" SkipNonexistentTargets="true" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Targets="_IsProjectRestoreSupported" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Targets="_IsProjectRestoreSupported" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <WarnForInvalidProjectsTask Condition=" '$(DisableWarnForInvalidRestoreProjects)' != 'true' AND '$(HideWarningsAndErrors)' != 'true' " AllProjects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" ValidProjects="@(FilteredRestoreGraphProjectInputItems)" />
  </Target>
  <Target Name="_GenerateRestoreGraph" DependsOnTargets="_FilterRestoreGraphProjectInputItems;_GetAllRestoreProjectPathItems" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Generating dg file" />
    <Message Importance="low" Text="%(_RestoreProjectPathItems.Identity)" />
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_GenerateRestoreGraphProjectEntryInput)" Targets="_GenerateRestoreGraphProjectEntry" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_RestoreProjectPathItems)" Targets="_GenerateProjectRestoreGraph" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphProjectEntry" DependsOnTargets="_GenerateRestoreSpecs;_GenerateDotnetCliToolReferenceSpecs" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreSpecs" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Restore entry point $(MSBuildProjectFullPath)" />
  </Target>
  <Target Name="_GenerateDotnetCliToolReferenceSpecs" DependsOnTargets="_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <GetRestoreDotnetCliToolsTask Condition=" '$(RestoreDotnetCliToolReferences)' == '' OR '$(RestoreDotnetCliToolReferences)' == 'true' " RestorePackagesPath="$(_OutputPackagesPath)" RestoreConfigFilePaths="$(_OutputConfigFilePaths)" ToolFramework="$(DotnetCliToolTargetFramework)" RestoreFallbackFolders="$(_OutputFallbackFolders)" ProjectPath="$(MSBuildProjectFullPath)" RestoreSources="$(_OutputSources)" DotnetCliToolReferences="@(DotnetCliToolReference)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreDotnetCliToolsTask>
  </Target>
  <Target Name="_GetProjectJsonPath" Returns="$(_CurrentProjectJsonPath)">
    <GetRestoreProjectJsonPathTask Condition=" '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' " ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="ProjectJsonPath" ItemName="_CurrentProjectJsonPath" />
    </GetRestoreProjectJsonPathTask>
  </Target>
  <Target Name="_GetRestoreProjectStyle" DependsOnTargets="_GetProjectJsonPath;CollectPackageReferences" Returns="$(RestoreProjectStyle);$(PackageReferenceCompatibleProjectStyle)">
    <GetRestoreProjectStyleTask RestoreProjectStyle="$(RestoreProjectStyle)" MSBuildProjectDirectory="$(MSBuildProjectDirectory)" HasPackageReferenceItems="$(_HasPackageReferenceItems)" MSBuildProjectName="$(MSBuildProjectName)" ProjectJsonPath="$(_CurrentProjectJsonPath)">
      <Output TaskParameter="ProjectStyle" ItemName="RestoreProjectStyle" />
      <Output TaskParameter="IsPackageReferenceCompatibleProjectStyle" ItemName="PackageReferenceCompatibleProjectStyle" />
    </GetRestoreProjectStyleTask>
  </Target>
  <Target Name="EnableIntermediateOutputPathMismatchWarning" Condition="'$(RestoreProjectStyle)' == 'PackageReference'" DependsOnTargets="_GetRestoreProjectStyle" />
  <Target Name="_GetRestoreTargetFrameworksOutput" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworksOutputFiltered)">
    <GetProjectTargetFrameworksTask Condition=" '$(RestoreProjectStyle)' != 'ProjectJson' OR '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetPlatformVersion="$(TargetPlatformVersion)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TargetPlatformMinVersion="$(TargetPlatformMinVersion)" TargetFramework="$(TargetFramework)" ProjectPath="$(MSBuildProjectFullPath)" TargetFrameworks="$(TargetFrameworks)">
      <Output TaskParameter="ProjectTargetFrameworks" ItemName="_RestoreProjectFramework" />
    </GetProjectTargetFrameworksTask>
  </Target>
  <Target Name="_GetRestoreTargetFrameworksAsItems" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworkItems)" />
  <Target Name="_GetRestoreSettings" Condition=" '$(RestoreProjectStyle)' == 'PackageReference' OR '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == 'DotnetToolReference' OR '$(RestoreProjectStyle)' == 'PackagesConfig'" DependsOnTargets="_GetRestoreSettingsOverrides;_GetRestoreSettingsCurrentProject;_GetRestoreSettingsAllFrameworks" Returns="$(_OutputSources);$(_OutputPackagesPath);$(_OutputRepositoryPath);$(_OutputFallbackFolders);$(_OutputConfigFilePaths)">
    <GetRestoreSettingsTask RestoreProjectStyle="$(RestoreProjectStyle)" RestorePackagesPath="$(RestorePackagesPath)" RestoreConfigFile="$(RestoreConfigFile)" RestoreSourcesOverride="$(_RestoreSourcesOverride)" RestoreFallbackFolders="$(RestoreFallbackFolders)" RestoreRepositoryPathOverride="$(_RestoreRepositoryPathOverride)" RestoreFallbackFoldersOverride="$(_RestoreFallbackFoldersOverride)" RestoreRootConfigDirectory="$(RestoreRootConfigDirectory)" RestorePackagesPathOverride="$(_RestorePackagesPathOverride)" MSBuildStartupDirectory="$(MSBuildStartupDirectory)" RestoreSolutionDirectory="$(RestoreSolutionDirectory)" RestoreSources="$(RestoreSources)" ProjectUniqueName="$(MSBuildProjectFullPath)" RestoreRepositoryPath="$(RestoreRepositoryPath)" RestoreSettingsPerFramework="@(_RestoreSettingsPerFramework)">
      <Output TaskParameter="OutputSources" ItemName="_OutputSources" />
      <Output TaskParameter="OutputPackagesPath" ItemName="_OutputPackagesPath" />
      <Output TaskParameter="OutputRepositoryPath" ItemName="_OutputRepositoryPath" />
      <Output TaskParameter="OutputFallbackFolders" ItemName="_OutputFallbackFolders" />
      <Output TaskParameter="OutputConfigFilePaths" ItemName="_OutputConfigFilePaths" />
    </GetRestoreSettingsTask>
  </Target>
  <Target Name="_GetRestoreSettingsCurrentProject" Condition=" '$(TargetFrameworks)' == '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GetRestoreSettingsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems;_GetRestoreProjectStyle" Returns="@(_RestoreSettingsPerFramework)">
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Targets="_GetRestoreSettingsPerFramework" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSettingsPerFramework" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GenerateRestoreProjectSpec" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput;_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <ConvertToAbsolutePath Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' OR '$(RestoreProjectStyle)' == 'ProjectJson'" Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateProjectRestoreGraph" DependsOnTargets="&#xD;&#xA;      _GetRestoreProjectStyle;&#xD;&#xA;      _GenerateRestoreProjectSpec;&#xD;&#xA;      _GenerateRestoreDependencies" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreDependencies" DependsOnTargets="_GenerateProjectRestoreGraphAllFrameworks;_GenerateProjectRestoreGraphCurrentProject" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreGraphEntry)">
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateProjectRestoreGraphPerFramework" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateProjectRestoreGraphCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateProjectRestoreGraphPerFramework" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphPerFramework" DependsOnTargets="_GetRestoreProjectStyle;CollectPackageReferences;CollectPackageDownloads;CollectFrameworkReferences;CollectCentralPackageVersions" Returns="@(_RestoreGraphEntry)">
    <GetRestoreProjectReferencesTask ProjectReferences="@(ProjectReference)" ParentProjectPath="$(MSBuildProjectFullPath)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreProjectReferencesTask>
    <GetRestorePackageReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " PackageReferences="@(PackageReference)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageReferencesTask>
    <GetCentralPackageVersionsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' " CentralPackageVersions="@(PackageVersion)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetCentralPackageVersionsTask>
    <GetRestorePackageDownloadsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " PackageDownloads="@(PackageDownload)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageDownloadsTask>
    <GetRestoreFrameworkReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " FrameworkReferences="@(FrameworkReference)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreFrameworkReferencesTask>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)" />
  <Target Name="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)">
    <ConvertToAbsolutePath Paths="@(ProjectReference)">
      <Output TaskParameter="AbsolutePaths" ItemName="_RestoreGraphAbsoluteProjectPaths" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItems" DependsOnTargets="_GenerateRestoreProjectPathItemsAllFrameworks;_GenerateRestoreProjectPathItemsCurrentProject" Returns="@(_CurrentRestoreProjectPathItems)">
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItems)">
      <Output TaskParameter="Filtered" ItemName="_CurrentRestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " BuildInParallel="$(RestoreBuildInParallel)" SkipNonexistentTargets="true" SkipNonexistentProjects="true" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreProjectPathItemsPerFramework" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreProjectPathItemsPerFramework" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreProjectPathWalk" DependsOnTargets="_GenerateRestoreProjectPathItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " BuildInParallel="$(RestoreBuildInParallel)" SkipNonexistentTargets="true" SkipNonexistentProjects="true" Projects="@(_CurrentRestoreProjectPathItems)" Targets="_GenerateRestoreProjectPathWalk" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(_CurrentRestoreProjectPathItems)" Targets="_GenerateRestoreProjectPathWalk" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_GenerateRestoreProjectPathWalkOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GetAllRestoreProjectPathItems" DependsOnTargets="_FilterRestoreGraphProjectInputItems" Returns="@(_RestoreProjectPathItems)">
    <NuGetMessageTask Importance="High" Name="DeterminingProjectsToRestore" />
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " BuildInParallel="$(RestoreBuildInParallel)" SkipNonexistentTargets="true" SkipNonexistentProjects="true" Projects="@(FilteredRestoreGraphProjectInputItems)" Targets="_GenerateRestoreProjectPathWalk" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(FilteredRestoreGraphProjectInputItems)" Targets="_GenerateRestoreProjectPathWalk" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItemsOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItemsWithoutDupes" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " BuildInParallel="$(RestoreBuildInParallel)" SkipNonexistentTargets="true" SkipNonexistentProjects="true" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Targets="_IsProjectRestoreSupported" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Targets="_IsProjectRestoreSupported" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsOverrides" Returns="$(_RestorePackagesPathOverride);$(_RestoreRepositoryPathOverride);$(_RestoreSourcesOverride);$(_RestoreFallbackFoldersOverride)">
    <MSBuild Condition=" '$(RestorePackagesPath)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestorePackagesPathOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestorePackagesPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreRepositoryPathOverride)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreRepositoryPathOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreRepositoryPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreSources)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreSourcesOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSourcesOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreFallbackFolders)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreFallbackFoldersOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreFallbackFoldersOverride" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestorePackagesPathOverride" Returns="$(_RestorePackagesPathOverride)" />
  <Target Name="_GetRestoreRepositoryPathOverride" Returns="$(_RestoreRepositoryPathOverride)" />
  <Target Name="_GetRestoreSourcesOverride" Returns="$(_RestoreSourcesOverride)" />
  <Target Name="_GetRestoreFallbackFoldersOverride" Returns="$(_RestoreFallbackFoldersOverride)" />
  <Target Name="_IsProjectRestoreSupported" Returns="@(_ValidProjectsForRestore)" />
  <Target Name="Build" Outputs="@(CollectedBuildOutput)">
    <MSBuild BuildInParallel="True" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Clean">
    <MSBuild BuildInParallel="True" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" Projects="@(ProjectReference-&gt;Reverse())" Targets="Clean" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="Rebuild" Outputs="@(CollectedBuildOutput)">
    <MSBuild BuildInParallel="True" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" Projects="@(ProjectReference)" Targets="Rebuild" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Publish">
    <MSBuild BuildInParallel="True" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" Projects="@(ProjectReference)" Targets="Publish" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="RandomQuotes" Outputs="@(RandomQuotesBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="RandomQuotesBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="RandomQuotes:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Clean" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="RandomQuotes:Rebuild" Outputs="@(RandomQuotesBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Rebuild" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="RandomQuotesBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="RandomQuotes:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes\RandomQuotes.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Publish" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="RandomQuotes_Tests" Outputs="@(RandomQuotes_TestsBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="RandomQuotes_TestsBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="RandomQuotes_Tests:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Clean" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="RandomQuotes_Tests:Rebuild" Outputs="@(RandomQuotes_TestsBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Rebuild" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="RandomQuotes_TestsBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="RandomQuotes_Tests:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'E:\课程学习\DevOps\Octopus\Deploy an ASP.NET application to IIS using Octopus and TeamCity\RandomQuotes-aspmvc4\RandomQuotes.Tests\RandomQuotes.Tests.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Targets="Publish" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
</Project>